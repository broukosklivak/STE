{"ast":null,"code":"import StylePanel from '../components/StylePanel.vue';\nexport default {\n  name: 'EditorField',\n  components: {\n    StylePanel\n  },\n\n  data() {\n    return {\n      insert: true\n    };\n  },\n\n  methods: {\n    moveCaret(win, charCount) {\n      var sel;\n\n      if (win.getSelection) {\n        sel = win.getSelection();\n\n        if (sel.rangeCount > 0) {\n          var textNode = sel.focusNode;\n          var newOffset = sel.focusOffset + charCount;\n          sel.collapse(textNode, Math.min(textNode.length, newOffset));\n        }\n      }\n    },\n\n    keyPress(e) {\n      if (this.insert == true) {\n        if (e.keyCode == 73) {\n          e.preventDefault();\n          alert(\"Insert mode\");\n          this.insert = false;\n        } else if (e.keyCode == 72) {\n          e.preventDefault();\n          this.moveCaret(window, -1);\n        } else if (e.keyCode == 76) {\n          e.preventDefault();\n          this.moveCaret(window, 1);\n        } else if (e.keyCode == 9) {\n          e.preventDefault();\n          let command = prompt(\"Write the command here:\");\n\n          if (command == \"bold\") {\n            this.format('bold');\n          } else if (command == \"italic\") {\n            this.format('italic');\n          } else if (command == \"list\") {\n            this.format('insertunorderedlist');\n          } else {\n            alert(\"This is not a command\");\n          }\n        } else if (e.keyCode == 37) {} else if (e.keyCode == 38) {} else if (e.keyCode == 39) {} else if (e.keyCode == 40) {} else {\n          e.preventDefault();\n        }\n      } else if (this.insert == false) {\n        if (e.keyCode == 27) {\n          alert(\"Normal mode\");\n          this.insert = true;\n        }\n      }\n    },\n\n    format(command) {\n      document.execCommand(command, false);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAQA,OAAOA,UAAP,MAAuB,8BAAvB;AAEA,eAAe;AACXC,MAAI,EAAE,aADK;AAGXC,YAAU,EAAC;AACPF;AADO,GAHA;;AAOXG,MAAI,GAAE;AACF,WAAM;AACFC,YAAM,EAAE;AADN,KAAN;AAGH,GAXU;;AAaXC,SAAO,EAAE;AACTC,aAAS,CAACC,GAAD,EAAMC,SAAN,EAAiB;AAC1B,UAAIC,GAAJ;;AACA,UAAIF,GAAG,CAACG,YAAR,EAAsB;AAClBD,WAAE,GAAIF,GAAG,CAACG,YAAJ,EAAN;;AACA,YAAID,GAAG,CAACE,UAAJ,GAAiB,CAArB,EAAwB;AACpB,cAAIC,QAAO,GAAIH,GAAG,CAACI,SAAnB;AACA,cAAIC,SAAQ,GAAIL,GAAG,CAACM,WAAJ,GAAkBP,SAAlC;AACAC,aAAG,CAACO,QAAJ,CAAaJ,QAAb,EAAuBK,IAAI,CAACC,GAAL,CAASN,QAAQ,CAACO,MAAlB,EAA0BL,SAA1B,CAAvB;AACJ;AACJ;AACC,KAXQ;;AAaLM,YAAQ,CAACC,CAAD,EAAG;AACP,UAAI,KAAKjB,MAAL,IAAe,IAAnB,EAAwB;AACpB,YAAIiB,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAoB;AAChBD,WAAC,CAACE,cAAF;AACAC,eAAK,CAAC,aAAD,CAAL;AACA,eAAKpB,MAAL,GAAc,KAAd;AACJ,SAJA,MAMK,IAAIiB,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAoB;AACrBD,WAAC,CAACE,cAAF;AACA,eAAKjB,SAAL,CAAemB,MAAf,EAAuB,CAAC,CAAxB;AACJ,SAHK,MAIA,IAAIJ,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAoB;AACrBD,WAAC,CAACE,cAAF;AACA,eAAKjB,SAAL,CAAemB,MAAf,EAAuB,CAAvB;AACJ,SAHK,MAIA,IAAIJ,CAAC,CAACC,OAAF,IAAa,CAAjB,EAAmB;AACpBD,WAAC,CAACE,cAAF;AACA,cAAIG,OAAM,GAAIC,MAAM,CAAC,yBAAD,CAApB;;AACA,cAAID,OAAM,IAAK,MAAf,EAAsB;AAClB,iBAAKE,MAAL,CAAY,MAAZ;AACJ,WAFA,MAGK,IAAIF,OAAM,IAAK,QAAf,EAAwB;AACzB,iBAAKE,MAAL,CAAY,QAAZ;AACJ,WAFK,MAGA,IAAIF,OAAM,IAAK,MAAf,EAAsB;AACvB,iBAAKE,MAAL,CAAY,qBAAZ;AACJ,WAFK,MAGD;AACAJ,iBAAK,CAAC,uBAAD,CAAL;AACJ;AACJ,SAfK,MAiBA,IAAIH,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAoB,CAAC,CAArB,MACA,IAAID,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAoB,CAAC,CAArB,MACA,IAAID,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAoB,CAAC,CAArB,MACA,IAAID,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAoB,CAAC,CAArB,MAEA;AACDD,WAAC,CAACE,cAAF;AACJ;AACJ,OAxCA,MAyCK,IAAI,KAAKnB,MAAL,IAAe,KAAnB,EAAyB;AAC1B,YAAIiB,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAoB;AAChBE,eAAK,CAAC,aAAD,CAAL;AACA,eAAKpB,MAAL,GAAc,IAAd;AACJ;AACJ;AACH,KA7DI;;AA+DTwB,UAAM,CAACF,OAAD,EAAU;AAChBG,cAAQ,CAACC,WAAT,CAAqBJ,OAArB,EAA8B,KAA9B;AACH;;AAjEY;AAbE,CAAf","names":["StylePanel","name","components","data","insert","methods","moveCaret","win","charCount","sel","getSelection","rangeCount","textNode","focusNode","newOffset","focusOffset","collapse","Math","min","length","keyPress","e","keyCode","preventDefault","alert","window","command","prompt","format","document","execCommand"],"sourceRoot":"","sources":["/home/ja/prace/js/vue-klauzury/src/components/EditorField.vue"],"sourcesContent":["<template>\n    <StylePanel @bold=\"format('bold')\" @italic=\"format('italic')\" @list=\"format('insertunorderedlist')\" />\n    <div class=\"editorfield\" :insert=\"true\" contenteditable=\"true\" v-on:keydown=\"keyPress($event)\"\n    spellcheck=\"false\">\n    </div>\n</template>\n\n<script>\nimport StylePanel from '../components/StylePanel.vue'\n\nexport default {\n    name: 'EditorField',\n\n    components:{\n        StylePanel\n    },\n\n    data(){\n        return{\n            insert: true\n        }\n    },\n\n    methods: {\n    moveCaret(win, charCount) {\n    var sel;\n    if (win.getSelection) {\n        sel = win.getSelection();\n        if (sel.rangeCount > 0) {\n            var textNode = sel.focusNode;\n            var newOffset = sel.focusOffset + charCount;\n            sel.collapse(textNode, Math.min(textNode.length, newOffset));\n        }\n    } \n    },\n\n        keyPress(e){\n            if (this.insert == true){\n                if (e.keyCode == 73){\n                    e.preventDefault()\n                    alert(\"Insert mode\")\n                    this.insert = false\n                }\n\n                else if (e.keyCode == 72){\n                    e.preventDefault() \n                    this.moveCaret(window, -1)\n                }\n                else if (e.keyCode == 76){\n                    e.preventDefault()\n                    this.moveCaret(window, 1)   \n                }\n                else if (e.keyCode == 9){\n                    e.preventDefault()\n                    let command = prompt(\"Write the command here:\")\n                    if (command == \"bold\"){\n                        this.format('bold')\n                    }\n                    else if (command == \"italic\"){\n                        this.format('italic')\n                    }\n                    else if (command == \"list\"){\n                        this.format('insertunorderedlist')\n                    }\n                    else{\n                        alert(\"This is not a command\")\n                    }\n                }\n\n                else if (e.keyCode == 37){}\n                else if (e.keyCode == 38){}\n                else if (e.keyCode == 39){}\n                else if (e.keyCode == 40){}\n\n                else {\n                    e.preventDefault()\n                }\n            }\n            else if (this.insert == false){\n                if (e.keyCode == 27){\n                    alert(\"Normal mode\")\n                    this.insert = true\n                }\n            }\n        },\n\n    format(command) {\n    document.execCommand(command, false);\n }\n        }\n    }\n</script>\n\n<style scoped>\n    .editorfield{\n        display: block;\n        margin: auto;\n        resize: none;\n        outline: none;\n        border: 2px solid black;\n        width: 1250px;\n        height: 1000px;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}