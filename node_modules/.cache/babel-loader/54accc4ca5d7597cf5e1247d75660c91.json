{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"editorfield\",\n    contenteditable: \"true\",\n    onKeydown: _cache[0] || (_cache[0] = $event => $options.keyPress($event))\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;uBACIA,oBACM,KADN,EACM;AADDC,SAAK,EAAC,aACL;AADmBC,mBAAe,EAAC,MACnC;AAD+CC,aAAO,sCAAEC,kBAASC,MAAT,CAAF;AACtD,GADN;;AAAA","names":["_createElementBlock","class","contenteditable","onKeydown","$options","$event"],"sourceRoot":"","sources":["/home/ja/prace/js/vue-klauzury/src/components/EditorField.vue"],"sourcesContent":["<template>\n    <div class=\"editorfield\" contenteditable=\"true\" v-on:keydown=\"keyPress($event)\">\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'EditorField',\n\n    props:{\n        import: {type: Boolean, default: true}\n    },\n\n    methods: {\n        keyPress(e){\n            if (this.import == true){\n                e.preventDefault()\n                if (e.keyCode == 73){\n                    alert(\"Import mode\")\n                    this.import = false\n                }\n            }\n            else if (this.import == false){\n                if (e.keyCode == 27){\n                    alert(\"Normal mode\")\n                    this.import = true\n                }\n            }\n        }\n        /*keyPress(e) {\n            e.preventDefault()\n            if (e.keyCode == 73){\n            alert(\"pele\")\n            }*/\n        }\n    }\n</script>\n\n<style scoped>\n    .editorfield{\n        margin: auto;\n        border: 2px solid black;\n        width: 1250px;\n        height: 1000px;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}