{"ast":null,"code":"import StylePanel from '../components/StylePanel.vue';\nexport default {\n  name: 'EditorField',\n  components: {\n    StylePanel\n  },\n\n  data() {\n    return {\n      insert: true\n    };\n  },\n\n  methods: {\n    moveCaret(win, charCount) {\n      var sel;\n\n      if (win.getSelection) {\n        sel = win.getSelection();\n\n        if (sel.rangeCount > 0) {\n          var textNode = sel.focusNode;\n          var newOffset = sel.focusOffset + charCount;\n          sel.collapse(textNode, Math.min(textNode.length, newOffset));\n        }\n      }\n    },\n\n    loadImage() {\n      var image = prompt(\"Paste or type a link\");\n\n      if (image == null || image == \"\") {\n        alert(\"No url was set\");\n      } else {\n        document.execCommand(\"insertimage\", false, image);\n        var img = document.querySelector(\"img[src='\" + image + \"']\");\n        let width = prompt(\"Please enter width of image (in px)\");\n        img.style.width = width + \"px\";\n        img.style.maxWidth = \"100%\";\n      }\n    },\n\n    saveDocument() {\n      var preHtml = \"\";\n      var postHtml = \"\";\n      var html = preHtml + this.$refs.editorfield.innerHTML + postHtml;\n      var blob = new Blob(['\\ufeff', html], {\n        type: 'application/msword'\n      }); // Specify link url\n\n      var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html); // Specify file name\n\n      let nameprompt = prompt(\"Please enter file name\");\n\n      if (nameprompt == null || nameprompt == \"\") {\n        nameprompt = \"Document\";\n      }\n\n      let filename = nameprompt + '.doc'; // Create download link element\n\n      var downloadLink = document.createElement(\"a\");\n      document.body.appendChild(downloadLink);\n\n      if (navigator.msSaveOrOpenBlob) {\n        navigator.msSaveOrOpenBlob(blob, filename);\n      } else {\n        // Create a link to the file\n        downloadLink.href = url; // Setting the file name\n\n        downloadLink.download = filename; //triggering the function\n\n        downloadLink.click();\n      }\n\n      document.body.removeChild(downloadLink);\n    },\n\n    delete(what) {\n      if (what == \"all\") {\n        this.$refs.editorfield.innerHTML = \"\";\n      }\n    },\n\n    keyPress(e) {\n      if (this.insert == true) {\n        switch (e.keyCode) {\n          case 73:\n            e.preventDefault();\n            alert(\"Insert mode\");\n            this.insert = false;\n            break;\n\n          case 72:\n            e.preventDefault();\n            this.moveCaret(window, -1);\n            break;\n\n          case 76:\n            e.preventDefault();\n            this.moveCaret(window, +1);\n            break;\n\n          case 88:\n            e.preventDefault();\n            this.format('forwardDelete');\n            break;\n\n          case 9:\n            e.preventDefault();\n            let command = prompt(\"Write the command here:\");\n\n            switch (command) {\n              case \"bold\":\n                this.format('bold');\n                break;\n\n              case \"italic\":\n                this.format('italic');\n                break;\n\n              case \"list\":\n                this.format('insertunorderedlist');\n                break;\n\n              case \"textsize\":\n                let size = prompt(\"Write the text size here (1-7):\");\n\n                if (size < 1 || size > 7) {\n                  alert(\"This is not an option!\");\n                } else {\n                  this.textSize(size);\n                }\n\n                break;\n\n              case \"font\":\n                let fontName = prompt(\"Write the font here (Arial, Helvetica, Times New Roman, Courier New, Archivo Narrow, Roboto):\");\n\n                if (fontName == \"Arial\" || fontName == \"Helvetica\" || fontName == \"Times New Roman\" || fontName == \"Courier New\" || fontName == \"Archivo Narrow\" || fontName == \"Roboto\") {\n                  this.font(fontName);\n                } else {\n                  alert(\"This is not an option!\");\n                }\n\n                break;\n\n              case \"listol\":\n                this.format('insertorderedlist');\n                break;\n\n              case \"textcolor\":\n                let colorname = prompt(\"Write the color here (Yellow, Green, Blue, Violet, Red, Orange, Black, Gray, Brown, White):\");\n                this.colorSwitch(colorname, true);\n                break;\n\n              case \"backcolor\":\n                let backcolorname = prompt(\"Write the color here (Yellow, Green, Blue, Violet, Red, Orange, Black, Gray, Brown, White):\");\n                this.colorSwitch(backcolorname, false);\n                break;\n\n              case \"alignleft\":\n                this.format('justifyLeft');\n                break;\n\n              case \"aligncenter\":\n                this.format('justifyCenter');\n                break;\n\n              case \"alignright\":\n                this.format('justifyRight');\n                break;\n\n              case \"subscript\":\n                this.format('subscript');\n                break;\n\n              case \"superscript\":\n                this.format('superscript');\n                break;\n\n              case \"link\":\n                this.link();\n                break;\n\n              case \"unlink\":\n                this.format('unlink');\n                break;\n\n              case \"underline\":\n                this.format('underline');\n                break;\n\n              case \"wq\":\n                this.saveDocument();\n                break;\n\n              case \"qa\":\n                let what = \"all\";\n                this.delete(what);\n                break;\n\n              default:\n                alert(\"This is not a command!\");\n            }\n\n          case 37:\n            break;\n\n          case 38:\n            break;\n\n          case 39:\n            break;\n\n          case 40:\n            break;\n\n          default:\n            e.preventDefault();\n        }\n      } else if (this.insert == false) {\n        if (e.keyCode == 27) {\n          alert(\"Normal mode\");\n          this.insert = true;\n        }\n      }\n    },\n\n    format(command, value) {\n      document.execCommand(command, false, value);\n    },\n\n    textSize(size) {\n      document.execCommand(\"fontSize\", false, size);\n    },\n\n    font(fontName) {\n      document.execCommand(\"fontName\", false, fontName);\n    },\n\n    textColor(textcolor) {\n      document.execCommand(\"foreColor\", false, textcolor);\n    },\n\n    backColor(backcolor) {\n      document.execCommand(\"backColor\", false, backcolor);\n    },\n\n    link() {\n      let url = prompt(\"Write the URL here:\");\n\n      if (url == null || url == \"\") {\n        alert(\"No url was set\");\n      } else {\n        this.format('createLink', url);\n      }\n    },\n\n    colorSwitch(colorname, textcolor) {\n      let colorcode;\n\n      switch (colorname) {\n        case \"Yellow\":\n          colorcode = \"ffff00\";\n          break;\n\n        case \"yellow\":\n          colorcode = \"ffff00\";\n          break;\n\n        case \"Green\":\n          colorcode = \"#008000\";\n          break;\n\n        case \"green\":\n          colorcode = \"#008000\";\n          break;\n\n        case \"Blue\":\n          colorcode = \"#0000ff\";\n          break;\n\n        case \"blue\":\n          colorcode = \"#0000ff\";\n          break;\n\n        case \"Violet\":\n          colorcode = \"#ee82ee\";\n          break;\n\n        case \"violet\":\n          colorcode = \"#ee82ee\";\n          break;\n\n        case \"Red\":\n          colorcode = \"#ff0000\";\n          break;\n\n        case \"red\":\n          colorcode = \"#ff0000\";\n          break;\n\n        case \"Orange\":\n          colorcode = \"#ffa500\";\n          break;\n\n        case \"orange\":\n          colorcode = \"#ffa500\";\n          break;\n\n        case \"Black\":\n          colorcode = \"#000000\";\n          break;\n\n        case \"black\":\n          colorcode = \"#000000\";\n          break;\n\n        case \"Gray\":\n          colorcode = \"#808080\";\n          break;\n\n        case \"gray\":\n          colorcode = \"#808080\";\n          break;\n\n        case \"Brown\":\n          colorcode = \"#8b4513\";\n          break;\n\n        case \"brown\":\n          colorcode = \"#8b4513\";\n          break;\n\n        case \"White\":\n          colorcode = \"#ffffff\";\n          break;\n\n        case \"white\":\n          colorcode = \"#ffffff\";\n          break;\n\n        default:\n          alert(\"This is not an option!\");\n      }\n\n      if (textcolor == true) {\n        this.textColor(colorcode);\n      } else if (textcolor == false) {\n        this.backColor(colorcode);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["StylePanel","name","components","data","insert","methods","moveCaret","win","charCount","sel","getSelection","rangeCount","textNode","focusNode","newOffset","focusOffset","collapse","Math","min","length","loadImage","image","prompt","alert","document","execCommand","img","querySelector","width","style","maxWidth","saveDocument","preHtml","postHtml","html","$refs","editorfield","innerHTML","blob","Blob","type","url","encodeURIComponent","nameprompt","filename","downloadLink","createElement","body","appendChild","navigator","msSaveOrOpenBlob","href","download","click","removeChild","delete","what","keyPress","e","keyCode","preventDefault","window","format","command","size","textSize","fontName","font","colorname","colorSwitch","backcolorname","link","value","textColor","textcolor","backColor","backcolor","colorcode"],"sourceRoot":"","sources":["/home/ja/prace/js/vue-klauzury/src/components/EditorField.vue"],"sourcesContent":["<template>\n    <StylePanel @bold=\"format('bold')\" @italic=\"format('italic')\" @list=\"format('insertunorderedlist')\" @list-ol=\"format('insertorderedlist')\" @font-size=\"textSize\" @font-name=\"font\"\n    @text-color=\"textColor\" @back-color=\"backColor\" @align-left=\"format('justifyLeft')\" @align-center=\"format('justifyCenter')\" @align-right=\"format('justifyRight')\" \n    @subscript=\"format('subscript')\" @superscript=\"format('superscript')\" @link=\"link\" @unlink=\"format('unlink')\" @underline=\"format('underline')\"\n    @save=\"saveDocument()\" @image=\"loadImage()\" />\n    <div class=\"editorfield\" ref=\"editorfield\" :insert=\"true\" contenteditable=\"true\" v-on:keydown=\"keyPress($event)\"\n    spellcheck=\"false\"> \n    </div>\n</template>\n\n<script>\nimport StylePanel from '../components/StylePanel.vue'\n\nexport default {\n    name: 'EditorField',\n\n    components:{\n        StylePanel\n    },\n\n    data(){\n        return{\n            insert: true\n        }\n    },\n\n    methods: {\n    moveCaret(win, charCount) {\n    var sel;\n    if (win.getSelection) {\n        sel = win.getSelection();\n        if (sel.rangeCount > 0) {\n            var textNode = sel.focusNode;\n            var newOffset = sel.focusOffset + charCount;\n            sel.collapse(textNode, Math.min(textNode.length, newOffset));\n        }\n    } \n    },\n\n    loadImage(){\n    var image = prompt (\"Paste or type a link\")\n    if (image == null || image == \"\"){\n            alert(\"No url was set\")\n        }\n        else{\n    document.execCommand(\"insertimage\", false, image)\n\n    var img = document.querySelector(\"img[src='\"+ image +\"']\")\n    let width = prompt (\"Please enter width of image (in px)\")\n    img.style.width = width + \"px\"\n    img.style.maxWidth = \"100%\"\n        }\n    },\n\n    saveDocument(){\n    var preHtml = \"\";\n    var postHtml = \"\";\n    var html = preHtml+this.$refs.editorfield.innerHTML+postHtml;\n\n    var blob = new Blob(['\\ufeff', html], {\n        type: 'application/msword'\n    });\n    \n    // Specify link url\n    var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html);\n    \n    // Specify file name\n    let nameprompt = prompt(\"Please enter file name\")\n    if (nameprompt == null || nameprompt == \"\"){\n        nameprompt = \"Document\"\n    }\n\n    let filename = nameprompt+'.doc'\n    \n    // Create download link element\n    var downloadLink = document.createElement(\"a\");\n\n    document.body.appendChild(downloadLink);\n    \n    if(navigator.msSaveOrOpenBlob ){\n        navigator.msSaveOrOpenBlob(blob, filename);\n    }else{\n        // Create a link to the file\n        downloadLink.href = url;\n        \n        // Setting the file name\n        downloadLink.download = filename;\n        \n        //triggering the function\n        downloadLink.click();\n    }\n    \n    document.body.removeChild(downloadLink);\n    },\n\n    delete(what){\n        if (what == \"all\"){\n            this.$refs.editorfield.innerHTML = \"\"\n        }\n    },\n\n        keyPress(e){\n            if (this.insert == true){\n                switch(e.keyCode){\n                    case 73: \n                    e.preventDefault()\n                    alert(\"Insert mode\")\n                    this.insert = false\n                    break;\n\n                    case 72:\n                    e.preventDefault() \n                    this.moveCaret(window, -1)\n                    break;\n\n                    case 76:\n                    e.preventDefault()\n                    this.moveCaret(window, +1)\n                    break;\n\n                    case 88:\n                    e.preventDefault()\n                    this.format('forwardDelete')\n                    break;\n\n                    case 9:\n                    e.preventDefault()\n                    let command = prompt(\"Write the command here:\")\n                    switch(command){\n                        case \"bold\":\n                        this.format('bold')\n                        break;\n\n                        case \"italic\":\n                        this.format('italic')\n                        break;\n                    \n                        case \"list\":\n                        this.format('insertunorderedlist')\n                        break;\n\n                        case \"textsize\":\n                        let size = prompt(\"Write the text size here (1-7):\")\n                        if (size < 1 || size > 7){\n                            alert(\"This is not an option!\")\n                        }\n                        else{\n                            this.textSize(size)\n                        }\n                        break;\n\n                        case \"font\":\n                        let fontName = prompt(\"Write the font here (Arial, Helvetica, Times New Roman, Courier New, Archivo Narrow, Roboto):\")\n                        if (fontName == \"Arial\" || fontName == \"Helvetica\" || fontName == \"Times New Roman\" || fontName == \"Courier New\" || fontName == \"Archivo Narrow\" || \n                        fontName == \"Roboto\"){\n                            this.font(fontName)\n                        }\n                        else{\n                            alert(\"This is not an option!\")\n                        }\n                        break;\n\n                        case \"listol\":\n                        this.format('insertorderedlist')\n                        break;\n\n                        case \"textcolor\":\n                        let colorname = prompt(\"Write the color here (Yellow, Green, Blue, Violet, Red, Orange, Black, Gray, Brown, White):\")\n                        this.colorSwitch(colorname, true)\n                        break;\n\n                        case \"backcolor\":\n                        let backcolorname = prompt(\"Write the color here (Yellow, Green, Blue, Violet, Red, Orange, Black, Gray, Brown, White):\")\n                        this.colorSwitch(backcolorname, false)\n                        break;\n\n                        case \"alignleft\":\n                        this.format('justifyLeft')\n                        break;\n\n                        case \"aligncenter\":\n                        this.format('justifyCenter')\n                        break;\n\n                        case \"alignright\":\n                        this.format('justifyRight')\n                        break;\n\n                        case \"subscript\":\n                        this.format('subscript')\n                        break;\n\n                        case \"superscript\":\n                        this.format('superscript')\n                        break;\n\n                        case \"link\":\n                        this.link()\n                        break;\n\n                        case \"unlink\":\n                        this.format('unlink')\n                        break;\n\n                        case \"underline\":\n                        this.format('underline')\n                        break;\n\n                        case \"wq\":\n                        this.saveDocument()\n                        break;\n\n                        case \"qa\":\n                        let what = \"all\"\n                        this.delete(what)\n                        break;\n\n                        default:\n                        alert(\"This is not a command!\")\n                    }\n\n                    case 37:\n                    break;\n\n                    case 38:\n                    break;\n\n                    case 39:\n                    break;\n\n                    case 40:\n                    break;\n\n                    default: \n                    e.preventDefault()\n                }\n            }\n            else if (this.insert == false){\n                if (e.keyCode == 27){\n                    alert(\"Normal mode\")\n                    this.insert = true\n                }\n            }\n        },\n\n    format(command, value) {\n    document.execCommand(command, false, value)\n },\n    \n    textSize(size){\n        document.execCommand(\"fontSize\", false, size)\n    },\n\n    font(fontName){\n        document.execCommand(\"fontName\", false, fontName)\n    },\n\n    textColor(textcolor){\n        document.execCommand(\"foreColor\", false, textcolor)\n    },\n\n    backColor(backcolor){\n        document.execCommand(\"backColor\", false, backcolor)\n    },\n\n    link(){\n        let url = prompt(\"Write the URL here:\")\n        if (url == null || url == \"\"){\n            alert(\"No url was set\")\n        }\n        else{\n        this.format('createLink', url)\n        }\n    },\n\n    colorSwitch(colorname, textcolor){\n        let colorcode\n\n            switch(colorname){\n                case \"Yellow\":\n                colorcode = \"ffff00\"\n                break;\n\n                case \"yellow\":\n                colorcode = \"ffff00\"\n                break;\n\n                case \"Green\":\n                colorcode = \"#008000\"\n                break;\n\n                case \"green\":\n                colorcode = \"#008000\"\n                break;\n\n                case \"Blue\":\n                colorcode = \"#0000ff\"\n                break;\n\n                case \"blue\":\n                colorcode = \"#0000ff\"\n                break;\n\n                case \"Violet\":\n                colorcode = \"#ee82ee\"\n                break;\n\n                case \"violet\":\n                colorcode = \"#ee82ee\"\n                break;\n\n                case \"Red\":\n                colorcode = \"#ff0000\"\n                break;\n\n                case \"red\":\n                colorcode = \"#ff0000\"\n                break;\n\n                case \"Orange\":\n                colorcode = \"#ffa500\"\n                break;\n\n                case \"orange\":\n                colorcode = \"#ffa500\"\n                break;\n\n                case \"Black\":\n                colorcode = \"#000000\"\n                break;\n\n                case \"black\":\n                colorcode = \"#000000\"\n                break;\n\n                case \"Gray\":\n                colorcode = \"#808080\"\n                break;\n\n                case \"gray\":\n                colorcode = \"#808080\"\n                break;\n\n                case \"Brown\":\n                colorcode = \"#8b4513\"\n                break;\n\n                case \"brown\":\n                colorcode = \"#8b4513\"\n                break;\n\n                case \"White\":\n                colorcode = \"#ffffff\"\n                break;\n\n                case \"white\":\n                colorcode = \"#ffffff\"\n                break;\n\n                default: \n                alert(\"This is not an option!\")\n                }\n            if (textcolor == true){    \n            this.textColor(colorcode)\n            }\n            else if (textcolor == false){\n            this.backColor(colorcode)    \n            }\n    },\n       }\n    }\n</script>\n\n<style scoped>\n    .editorfield{\n        padding: 5px;\n        display: block;\n        margin: auto;\n        resize: none;\n        outline: none;\n        border: 2px solid black;\n        width: 1250px;\n        height: 1000px;\n        word-wrap: break-word;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}