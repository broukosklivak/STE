{"ast":null,"code":"import { withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"editorfield\",\n    contenteditable: \"false\",\n    onKeypress: _cache[0] || (_cache[0] = _withModifiers($event => $options.toggleOff(), [\"self\"]))\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;uBACIA,oBACM,KADN,EACM;AADDC,SAAK,EAAC,aACL;AADmBC,mBAAe,EAAC,OACnC;AAD4CC,cAAQ,qDAAOC,oBAAP,EAAgB,QAAhB;AACpD,GADN;;AAAA","names":["_createElementBlock","class","contenteditable","onKeypress","$options"],"sourceRoot":"","sources":["/home/ja/prace/js/vue-klauzury/src/components/EditorField.vue"],"sourcesContent":["<template>\n    <div class=\"editorfield\" contenteditable=\"false\" @keypress.self=\"toggleOff()\">\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'EditorField',\n\n    methods: {\n        toggleOff(e) {\n            if (e.keyCode == 27){\n             console.log(\"I\")   \n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .editorfield{\n        border: 2px solid black;\n        width: 1250px;\n        height: 1000px;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}