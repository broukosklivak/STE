{"ast":null,"code":"import StylePanel from '../components/StylePanel.vue';\nexport default {\n  name: 'EditorField',\n  components: {\n    StylePanel\n  },\n\n  data() {\n    return {\n      insert: true\n    };\n  },\n\n  methods: {\n    moveCaret(win, charCount) {\n      var sel;\n\n      if (win.getSelection) {\n        sel = win.getSelection();\n\n        if (sel.rangeCount > 0) {\n          var textNode = sel.focusNode;\n          var newOffset = sel.focusOffset + charCount;\n          sel.collapse(textNode, Math.min(textNode.length, newOffset));\n        }\n      }\n    },\n\n    keyPress(e) {\n      if (this.insert == true) {\n        switch (e.keyCode) {\n          case 73:\n            e.preventDefault();\n            alert(\"Insert mode\");\n            this.insert = false;\n            break;\n\n          case 72:\n            e.preventDefault();\n            this.moveCaret(window, -1);\n            break;\n\n          case 76:\n            e.preventDefault();\n            this.moveCaret(window, 1);\n            break;\n\n          case 9:\n            e.preventDefault();\n            let command = prompt(\"Write the command here:\");\n\n            switch (command) {\n              case \"bold\":\n                this.format('bold');\n                break;\n\n              case \"italic\":\n                this.format('italic');\n                break;\n\n              case \"list\":\n                this.format('insertunorderedlist');\n                break;\n\n              case \"textsize\":\n                let size = prompt(\"Write the text size here (1-7):\");\n                this.textSize(size);\n                break;\n\n              case \"font\":\n                let fontName = prompt(\"Write the font here (Arial, Helvetica, Times New Roman, Courier New, Archivo Narrow, Roboto):\");\n                this.font(fontName);\n                break;\n\n              case \"listol\":\n                this.format('insertorderedlist');\n                break;\n\n              default:\n                alert(\"This is not a command!\");\n            }\n\n          case 37:\n            break;\n\n          case 38:\n            break;\n\n          case 39:\n            break;\n\n          case 40:\n            break;\n\n          default:\n            e.preventDefault();\n        }\n      } else if (this.insert == false) {\n        if (e.keyCode == 27) {\n          alert(\"Normal mode\");\n          this.insert = true;\n        }\n      }\n    },\n\n    format(command, value) {\n      document.execCommand(command, false, value);\n    },\n\n    textSize(size) {\n      document.execCommand(\"fontSize\", false, size);\n    },\n\n    font(fontName) {\n      document.execCommand(\"fontName\", false, fontName);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["StylePanel","name","components","data","insert","methods","moveCaret","win","charCount","sel","getSelection","rangeCount","textNode","focusNode","newOffset","focusOffset","collapse","Math","min","length","keyPress","e","keyCode","preventDefault","alert","window","command","prompt","format","size","textSize","fontName","font","value","document","execCommand"],"sourceRoot":"","sources":["/home/ja/prace/js/vue-klauzury/src/components/EditorField.vue"],"sourcesContent":["<template>\n    <StylePanel @bold=\"format('bold')\" @italic=\"format('italic')\" @list=\"format('insertunorderedlist')\" @list-ol=\"format('insertorderedlist')\" @font-size=\"textSize\" @font-name=\"font\"\n    />\n    <div class=\"editorfield\" :insert=\"true\" contenteditable=\"true\" v-on:keydown=\"keyPress($event)\"\n    spellcheck=\"false\">\n    </div>\n</template>\n\n<script>\nimport StylePanel from '../components/StylePanel.vue'\n\nexport default {\n    name: 'EditorField',\n\n    components:{\n        StylePanel\n    },\n\n    data(){\n        return{\n            insert: true\n        }\n    },\n\n    methods: {\n    moveCaret(win, charCount) {\n    var sel;\n    if (win.getSelection) {\n        sel = win.getSelection();\n        if (sel.rangeCount > 0) {\n            var textNode = sel.focusNode;\n            var newOffset = sel.focusOffset + charCount;\n            sel.collapse(textNode, Math.min(textNode.length, newOffset));\n        }\n    } \n    },\n\n        keyPress(e){\n            if (this.insert == true){\n                switch(e.keyCode){\n                    case 73: \n                    e.preventDefault()\n                    alert(\"Insert mode\")\n                    this.insert = false\n                    break;\n\n                    case 72:\n                    e.preventDefault() \n                    this.moveCaret(window, -1)\n                    break;\n\n                    case 76:\n                    e.preventDefault()\n                    this.moveCaret(window, 1)\n                    break;\n\n                    case 9:\n                    e.preventDefault()\n                    let command = prompt(\"Write the command here:\")\n                    switch(command){\n                        case \"bold\":\n                        this.format('bold')\n                        break;\n\n                        case \"italic\":\n                        this.format('italic')\n                        break;\n                    \n                        case \"list\":\n                        this.format('insertunorderedlist')\n                        break;\n\n                        case \"textsize\":\n                        let size = prompt(\"Write the text size here (1-7):\")\n                        this.textSize(size)\n                        break;\n\n                        case \"font\":\n                        let fontName = prompt(\"Write the font here (Arial, Helvetica, Times New Roman, Courier New, Archivo Narrow, Roboto):\")\n                        this.font(fontName)\n                        break;\n\n                        case \"listol\":\n                        this.format('insertorderedlist')\n                        break;\n\n                        default:\n                        alert(\"This is not a command!\")\n                    }\n\n                    case 37:\n                    break;\n\n                    case 38:\n                    break;\n\n                    case 39:\n                    break;\n\n                    case 40:\n                    break;\n\n                    default: \n                    e.preventDefault()\n                }\n            }\n            else if (this.insert == false){\n                if (e.keyCode == 27){\n                    alert(\"Normal mode\")\n                    this.insert = true\n                }\n            }\n        },\n\n    format(command, value) {\n    document.execCommand(command, false, value)\n },\n    \n    textSize(size){\n        document.execCommand(\"fontSize\", false, size)\n    },\n\n    font(fontName){\n        document.execCommand(\"fontName\", false, fontName)\n    },\n        }\n    }\n</script>\n\n<style scoped>\n    .editorfield{\n        padding: 5px;\n        display: block;\n        margin: auto;\n        resize: none;\n        outline: none;\n        border: 2px solid black;\n        width: 1250px;\n        height: 1000px;\n        word-wrap: break-word;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}